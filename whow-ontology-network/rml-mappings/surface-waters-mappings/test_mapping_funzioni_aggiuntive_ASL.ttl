@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix l0: <https://w3id.org/italia/onto/l0/> .
@prefix iot: <https://w3id.org/italia/onto/IoT/> .
@prefix mu: <https://w3id.org/italia/onto/MU/> .
@prefix ti: <https://w3id.org/italia/onto/TI/> .
@prefix cov: <https://w3id.org/italia/onto/COV/> .
@prefix clv: <https://w3id.org/italia/onto/CLV/> .
@prefix indicator: <https://w3id.org/italia/onto/Indicator/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix places: <https://w3id.org/stlab/places/> .
@prefix core: <https://dati.isprambiente.it/ontology/core/> .
@prefix whow-water: <https://w3id.org/environmental-data/onto/water-observation/>.
@prefix ti: <https://w3id.org/italia/onto/TI/>.
@prefix inspire-mf: <https://dati.isprambiente.it/ontology/inspire-mf/>.
@prefix whow-adm: <https://w3id.org/environmental-data/onto/water-observation/water-administration-ontology/>.
@base <https://w3id.org/environmental-data/onto/water-observation/> .

##########################################################
## LOGICAL SOURCES TO BE USED
##########################################################

# #LogicalSourceLaghi
<#LogicalSourceLaghi> a rml:BaseSource ;
    rml:source [
      a csvw:Table;
      csvw:url "023-ACQUE-SUPERFICIALI-DATI-Laghi.csv";

      csvw:dialect [
        a csvw:Dialect;
        csvw:delimiter ","
      ]
    ];
    rml:referenceFormulation ql:CSV .

#aggiungere logicalsource fiumi


###########################################################
##                  MAPPING RULES
##########################################################


# #################################
# ## OBSERVATION  MAPPING:
# #################################
<#WaterObservationMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "water-observation/{BACINO IDROGRAFICO}-{LAGO}-{Descrizione Profondità}-{CORPO IDRICO}-{PARAMETRO}-{DATA CAMPIONAMENTO}";
  rr:termType rr:IRI;
  rr:class whow-water:WaterChemicalObservation
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Observation for the parameter {PARAMETRO} of water basin {BACINO IDROGRAFICO} for lake {LAGO}. Waterbody code: {CORPO IDRICO} at date {DATA CAMPIONAMENTO}" ; rr:language "en" ]
];
rr:predicateObjectMap [
  rr:predicate ti:issued;
  rr:objectMap [rml:reference "DATA CAMPIONAMENTO"]
];
rr:predicateObjectMap [
  rr:predicate places:hasMunicipality;
  #rr:objectMap [ rr:template <#CreateMunicipalityURI-Function>; rr:termType rr:IRI; ]
  #rr:termType rr:IRI
  rr:objectMap <#CreateMunicipalityURI-Function>
];


rr:predicateObjectMap [
  rr:predicate whow-water:hasWaterFeature;
  rr:objectMap   <#CreateWaterbodyURI-Function>
] ;
rr:predicateObjectMap [
  rr:predicate whow-water:hasObservedProperty;
  rr:objectMap [
  rr:template "https://w3id.org/environmental-data/data/observable-property/concentration"; rr:termType rr:IRI;]
] ;
rr:predicateObjectMap [
  rr:predicate whow-water:takenFromStation;
  rr:objectMap [
  rr:template "https://w3id.org/environmental-data/data/monitoring-station/{Codice Stazione}";]
];
rr:predicateObjectMap [
  rr:predicate whow-water:hasResult;
  rr:objectMap [ rr:template "https://w3id.org/environmental-data/data/observation-value/{VALORE}-{UM}"; rr:termType rr:IRI; ]
  ];

rr:predicateObjectMap [
  rr:predicate whow-water:hasObservablePropertyObject;
  rr:objectMap [ rr:template "https://w3id.org/environmental-data/data/observable-property/chemical-agent-{CAS}"; rr:termType rr:IRI; ]
];

rr:predicateObjectMap [
  rr:predicate whow-water:hasObservationSample;
  rr:objectMap <#CreateObservationSampleURI-Function>
#  rr:template "https://w3id.org/environmental-data/onto/water-observation/observation-sample/{Descrizione Profondità}-{Profondità}";

];

rr:predicateObjectMap [
  rr:predicate places:hasProvince;
  rr:objectMap [
  rr:template "https://w3id.org/environmental-data/data/province/{PROVINCIA}";]
];

rr:predicateObjectMap [
  rr:predicate places:hasGeometry;
  rr:objectMap [
  rr:template "https://w3id.org/environmental-data/data/geometry/geometry_{COORD X}-{COORD Y}";]
].


<#HasObservablePropertyMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/observable-property/concentration";
  rr:termType rr:IRI;
  rr:class whow-water:ObservableProperty
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:constant "https://w3id.org/environmental-data/data/observable-property/concentration" ; rr:language "en" ]
];
rr:predicateObjectMap [
  rr:predicate core:name;
  rr:objectMap [ rr:template "Concentration" ; rr:language "en" ]
].
<#MonitoringStationMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/monitoring-station/{Codice Stazione}";
  rr:termType rr:IRI;
  rr:class whow-water:WaterMonitoringStation
] ;
rr:predicateObjectMap [
  rr:predicate places:hasMunicipality;
  rr:objectMap [ rr:constant <#CreateMunicipalityURI-Function>; rr:termType rr:IRI; ]
  #rr:objectMap <#CreateMunicipalityURI-Function>
];
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Monitoring station identifier for station {Codice Stazione}" ; rr:language "en" ]
].

<#ObservationSampleMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap <#CreateObservationSampleURI-Function>;


rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Water depth sampling description: {Descrizione Profondità} in the value/range value {Profondità}" ; rr:language "en" ]
];
rr:predicateObjectMap [
     rr:predicate whow-water:depthDescription ;
     rr:objectMap [ rr:template "{Descrizione Profondità}"; rr:datatype xsd:string ]
   ];
rr:predicateObjectMap [
  rr:predicate whow-water:sampleDepth ;
  rr:objectMap [ rr:template "{Profondità}"; rr:datatype xsd:string ]
  ].


<#GeometryMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/geometry/{COORD X}-{COORD Y}";
  rr:termType rr:IRI;
  rr:class places:Geometry
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Latitude {COORD X} and Longitude {COORD Y}" ; rr:language "en" ]
];
rr:predicateObjectMap [
rr:predicate places:lat ;
rr:objectMap [ rr:template "{COORD X}"; rr:datatype xsd:string ]
];
rr:predicateObjectMap [
rr:predicate places:lon ;
rr:objectMap [ rr:template "{COORD Y}"; rr:datatype xsd:string ]
].

<#ProvinceMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/province/{PROVINCIA}";
  rr:termType rr:IRI;
  rr:class places:Province
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Province of the observation." ; rr:language "en" ]
].

# #################################
# ## WATER FEATURE MAPPING
# #################################
<#WaterFeatureMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap   <#CreateWaterbodyURI-Function> ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Lake waterbody {LAGO}" ; rr:language "en" ]
];
rr:predicateObjectMap [
  rr:predicate core:isPartOf;
  rr:objectMap <#CreateBasinURI-Function>
  #rr:template "https://w3id.org/environmental-data/onto/water-observation/water-administration-ontology/water-basin/{BACINO IDROGRAFICO}";

].
<#WaterBasinMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap <#CreateBasinURI-Function>

 ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Water basin {BACINO IDROGRAFICO}" ; rr:language "en" ]
].

# #################################
# ## PROPERTY AGENT MAPPING
# #################################
<#ChemicalAgentMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/observable-property-object/chemical-agent-{CAS}";
  rr:termType rr:IRI;
  rr:class whow-water:ChemicalAgent
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Chemical agent identifier for the agent {PARAMETRO}: {CAS}. " ; rr:language "en" ]
];

rr:predicateObjectMap [
  rr:predicate core:hasUniqueIdentifier;
  rr:objectMap [ rr:template "https://w3id.org/environmental-data/data/observable-property-object/chemical-agent-identifier/{CAS}" ; rr:language "en" ]
].


# #################################
# ## OBSERVATION VALUE MAPPING
# #################################

<#ObservationValueMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/observation-value/{VALORE}-{UM}";
  rr:termType rr:IRI;
  rr:class inspire-mf:ObservationValue

] ;

rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Observation value {VALORE} {UM}" ; rr:language "en" ]
];

rr:predicateObjectMap [
  rr:predicate core:hasValue;
  rr:objectMap [
  rr:template "https://w3id.org/environmental-data/data/value/{VALORE}";]
];

rr:predicateObjectMap [
  rr:predicate core:hasUnitOfMeasure;
  rr:objectMap <#CreateUnitOfMeasureURI-Function>
  ].

<#ObservationValueHasValueMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/value/{VALORE}";
  rr:termType rr:IRI;
  rr:class core:Value
] ;
################# provamapping###################################
#rr:predicateObjectMap [
#	rr:predicate whow-water:ValueSpecification ;
#	rr:objectMap [
#		fnml:functionValue [
#			rr:predicateObjectMap [
#				rr:predicate fno:executes ;
	#			rr:objectMap [ rr:constant idlab-fn:trueCondition; rr:termType rr:IRI ]
	#		];

	#		rr:predicateObjectMap [
	#		  rr:predicate idlab-fn:strBoolean ;
		#	  rr:objectMap <#EqualsFunction>
	#		];

	#		rr:predicateObjectMap [
	#		  rr:predicate idlab-fn:str ;
	#		  rr:objectMap [ rr:constant core:notEqualValue ] #sarebbe maggiore o minore, ma ho trovato solo notEqual
	#		]
	#	];
#	]
#  ];
##############fineprovamapping#############

rr:predicateObjectMap [
rr:predicate core:value ;
rr:objectMap [ rr:template "{VALORE}"; rr:datatype xsd:float ]
];

rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Value {VALORE}" ; rr:language "en" ]
].

<#UnitOfMeasureMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLaghi> ;
rr:subjectMap [
  rr:template "https://w3id.org/environmental-data/data/um/{UM}";
  rr:termType rr:IRI;
  rr:class core:UnitOfMeasure
] ;

rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Unit of measure: {UM}" ; rr:language "en" ]
].




#########################################
#             FUNZIONI                  #
#########################################


    ##################
    ### REPLACECHARS FUNCTION #####

    <#CreateUnitOfMeasureURI-Function>
        fnml:functionValue [

         rr:predicateObjectMap [
           rr:predicate fno:executes ;
           rr:objectMap [ rr:constant grel:array_join ]
         ];

          rr:predicateObjectMap [
            rr:predicate grel:p_array_a ;
            rr:objectMap [ rr:constant "https://w3id.org/environmental-data/data/um"]
          ] ;
          rr:predicateObjectMap [
                rr:predicate grel:p_array_a ;
                rr:objectMap
                        <#ReplaceWhitespacesWithDash-Function>

          ];
          rr:predicateObjectMap [
            rr:predicate grel:p_string_sep ;
            rr:objectMap [ rr:constant "/" ]
          ]
        ];
        rr:termType rr:IRI .

        <#CreateMunicipalityURI-Function>
            fnml:functionValue [
             rr:predicateObjectMap [
               rr:predicate fno:executes ;
               rr:objectMap [ rr:constant grel:array_join ]
             ];

              rr:predicateObjectMap [
                rr:predicate grel:p_array_a ;
                rr:objectMap [ rr:constant "https://w3id.org/environmental-data/data/municipality"]
              ] ;

              rr:predicateObjectMap [
                    rr:predicate grel:p_array_a ;
                    rr:objectMap [
                          fnml:functionValue [                                  # The object is the result of the function
                              rml:logicalSource <#LogicalSourceLaghi> ;              # Use the same data source for input
                              rr:predicateObjectMap [
                                  rr:predicate fno:executes ;                   # Execute the function…
                                  rr:objectMap [ rr:constant grel:toLowerCase ] # grel:toLowercase
                              ] ;
                              rr:predicateObjectMap [
                                  rr:predicate grel:valueParameter ;
                                  rr:objectMap [ rml:reference "COMUNE" ]         # Use as input the "name" reference
                              ];
                              rr:predicateObjectMap [
                                    rr:predicate grel:p_array_a ;
                                    rr:objectMap
                                            <#ReplaceWhitespacesWithDash-MunicipalityFunction>

                              ];

                          ]
                   ]
              ];
              rr:predicateObjectMap [
                rr:predicate grel:p_string_sep ;
                rr:objectMap [ rr:constant "/" ]
              ]
            ];
            rr:termType rr:IRI.


    <#ReplaceWhitespacesWithDash-Function>
    fnml:functionValue [
      rml:logicalSource <#LogicalSourceLaghi>;
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant grel:string_replaceChars ]
     ];
      rr:predicateObjectMap [
          rr:predicate grel:valueParameter ;
          rr:objectMap [ rml:reference "UM"]
          ];

      rr:predicateObjectMap [
        rr:predicate grel:p_string_find ;
        rr:objectMap [ rr:constant " " ]
      ];
      rr:predicateObjectMap [
        rr:predicate grel:p_string_replace ;
        rr:objectMap [ rr:constant "-" ]
];
     ].

     <#ReplaceWhitespacesWithDash-MunicipalityFunction>
     fnml:functionValue [
       rml:logicalSource <#LogicalSourceLaghi>;
       rr:predicateObjectMap [
         rr:predicate fno:executes ;
         rr:objectMap [ rr:constant grel:string_replaceChars ]
      ];

      rr:predicateObjectMap [
          rr:predicate grel:valueParameter ;
          rr:objectMap [ rml:reference "COMUNE"]
          ];
       rr:predicateObjectMap [
         rr:predicate grel:p_string_find ;
         rr:objectMap [ rr:constant " " ]
       ];
       rr:predicateObjectMap [
         rr:predicate grel:p_string_replace ;
         rr:objectMap [ rr:constant "-" ]
 ];
      ].

      ##############descr Profondità
      <#CreateObservationSampleURI-Function>
          fnml:functionValue [
            rml:logicalSource <#LogicalSourceLaghi>;
           rr:predicateObjectMap [
             rr:predicate fno:executes ;
             rr:objectMap [ rr:constant grel:array_join ]
           ];

            rr:predicateObjectMap [
              rr:predicate grel:p_array_a ;
              rr:objectMap [ rr:constant "https://w3id.org/environmental-data/data/observation-sample"]
            ] ;
            rr:predicateObjectMap [
                  rr:predicate grel:p_array_a ;
                  rr:objectMap
                          <#ReplaceWhitespacesWithDash-ObservationSampleFunction>

            ];
            rr:predicateObjectMap [
              rr:predicate grel:p_array_a ;
              rr:objectMap [ rr:template "{Profondità}"]
            ] ;
            rr:predicateObjectMap [
              rr:predicate grel:p_string_sep ;
              rr:objectMap [ rr:constant "/" ]
            ]
          ];
          rr:class whow-water:ObservationSample;
          rr:termType rr:IRI .

      <#ReplaceWhitespacesWithDash-ObservationSampleFunction>
      fnml:functionValue [
        rml:logicalSource <#LogicalSourceLaghi>;
        rr:predicateObjectMap [
          rr:predicate fno:executes ;
          rr:objectMap [ rr:constant grel:string_replaceChars ]
       ];

       rr:predicateObjectMap [
           rr:predicate grel:valueParameter ;
           rr:objectMap [ rml:reference "Descrizione Profondità"]
           ];
        rr:predicateObjectMap [
          rr:predicate grel:p_string_find ;
          rr:objectMap [ rr:constant " " ]
        ];
        rr:predicateObjectMap [
          rr:predicate grel:p_string_replace ;
          rr:objectMap [ rr:constant "-" ]
  ];
       ].

       #####à SOSTITUZIONE SPAZI BACINO IDROGRAFICO
       <#CreateBasinURI-Function>
           fnml:functionValue [
             rml:logicalSource <#LogicalSourceLaghi>;
            rr:predicateObjectMap [
              rr:predicate fno:executes ;
              rr:objectMap [ rr:constant grel:array_join ]
            ];

             rr:predicateObjectMap [
               rr:predicate grel:p_array_a ;
               rr:objectMap [ rr:constant "https://w3id.org/environmental-data/data/waterfeature/water-basin"]
             ] ;
             rr:predicateObjectMap [
                   rr:predicate grel:p_array_a ;
                   rr:objectMap
                           <#ReplaceWhitespacesWithDash-BasinFunction>

             ];
             rr:predicateObjectMap [
               rr:predicate grel:p_string_sep ;
               rr:objectMap [ rr:constant "/" ]
             ]
           ];
           rr:class whow-water:WaterBasin;
           rr:termType rr:IRI .

       <#ReplaceWhitespacesWithDash-BasinFunction>
       fnml:functionValue [
         rml:logicalSource <#LogicalSourceLaghi>;
         rr:predicateObjectMap [
           rr:predicate fno:executes ;
           rr:objectMap [ rr:constant grel:string_replaceChars ]
        ];

        rr:predicateObjectMap [
            rr:predicate grel:valueParameter ;
            rr:objectMap [ rml:reference "BACINO IDROGRAFICO"]
            ];
         rr:predicateObjectMap [
           rr:predicate grel:p_string_find ;
           rr:objectMap [ rr:constant " " ]
         ];
         rr:predicateObjectMap [
           rr:predicate grel:p_string_replace ;
           rr:objectMap [ rr:constant "-" ]
   ];
        ].

        #####à SOSTITUZIONE SPAZI LAGO
        <#CreateWaterbodyURI-Function>
            fnml:functionValue [
              rml:logicalSource <#LogicalSourceLaghi>;
             rr:predicateObjectMap [
               rr:predicate fno:executes ;
               rr:objectMap [ rr:constant grel:array_join ]
             ];

              rr:predicateObjectMap [
                rr:predicate grel:p_array_a ;
                rr:objectMap [ rr:constant "https://w3id.org/environmental-data/data/waterfeature/waterbody"]
              ] ;
              rr:predicateObjectMap [
                    rr:predicate grel:p_array_a ;
                    rr:objectMap
                            <#ReplaceWhitespacesWithDash-WaterbodyFunction>

              ];
              rr:predicateObjectMap [
                rr:predicate grel:p_string_sep ;
                rr:objectMap [ rr:constant "/" ]
              ]
            ];
            rr:class whow-water:LakeWaterBody;
            rr:termType rr:IRI .

          <#ReplaceWhitespacesWithDash-WaterbodyFunction>
        fnml:functionValue [
          rml:logicalSource <#LogicalSourceLaghi>;
          rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant grel:string_replaceChars ]
         ];

         rr:predicateObjectMap [
             rr:predicate grel:valueParameter ;
             rr:objectMap [ rml:reference "LAGO"]
             ];
          rr:predicateObjectMap [
            rr:predicate grel:p_string_find ;
            rr:objectMap [ rr:constant " " ]
          ];
          rr:predicateObjectMap [
            rr:predicate grel:p_string_replace ;
            rr:objectMap [ rr:constant "-" ]
    ];
         ].

       #<#ReplaceUndescoreWithDash-ObservationSampleFunction>
       #<#ReplaceApostropheWithDash-ObservationSampleFunction>
